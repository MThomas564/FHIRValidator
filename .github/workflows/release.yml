name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger the workflow when a tag starting with 'v' is pushed (e.g., v1.0.0)

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repo
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Step 2: Set up .NET Core SDK
      - name: Set up .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'  # Specify your .NET version

      # Step 3: Restore dependencies
      - name: Restore dependencies
        run: dotnet restore
      
      # Step 4: Build the project
      - name: Build the project
        run: dotnet build --configuration Release --no-restore

      # Step 5: Publish the project
      - name: Publish the project
        run: dotnet publish --configuration Release --output ./publish --no-restore

      # Step 6: Create ZIP file of binaries
      - name: Create ZIP file of binaries
        run: zip -r ./publish/release.zip ./publish/*

      # Step 7: Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided by GitHub
        with:
          tag_name: ${{ github.ref }}  # Tag that triggered the workflow
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Step 8: Upload the release asset to GitHub
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure GITHUB_TOKEN is set here as well
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/release.zip
          asset_name: release.zip
          asset_content_type: application/zip
